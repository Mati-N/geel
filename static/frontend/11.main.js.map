{"version":3,"sources":["webpack:///./src/components/layout/Error.js","webpack:///./src/components/post/Post.js"],"names":["Error","error","componentStack","resetErrorBoundary","role","message","onClick","PostItem","lazy","Post","id","match","params","useQuery","GET_POST","variables","loading","data","fetchMore","refetch","useState","spin","size","node","posts","edges","FallbackComponent","className","key","likes","likers","length","comments","commentSet","user_id","user","username"],"mappings":"gNAaeA,MAXf,YAA8D,IAA7CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,mBACtC,OACE,yBAAKC,KAAK,SACR,oDACA,6BAAMH,EAAMI,SACZ,6BAAMH,GACN,4BAAQI,QAASH,GAAjB,eCAN,IAAMI,EAAWC,gBAAK,kBAAM,iCA+DbC,UA7DF,SAAC,GAIR,IAFQC,EAER,EAHJC,MACEC,OAAUF,GAER,EACiDG,mBAASC,IAAU,CACtEC,UAAW,CAAEL,QADPM,EADJ,EACIA,QAASC,EADb,EACaA,KADb,KACmBhB,MADnB,EAC0BiB,UAD1B,EACqCC,QAGjBC,oBAAS,IAJ7B,WAIGC,EAJH,UAmCJ,GAAIL,IAAYC,EACd,OAAO,kBAAC,iBAAD,CAASK,KAAM,KApCpB,IAsCIC,EAASN,EAAKO,MAAMC,MAAM,GAA1BF,KAER,OACE,kBAAC,gBAAD,CAAeG,kBAAmB1B,GAChC,yBAAK2B,UAAU,QACb,kBAACpB,EAAD,KACEqB,IAAKL,EAAKb,GACVmB,MAAON,EAAKO,OAAOC,OACnBC,SAAUT,EAAKU,WAAWF,OAC1BG,QAASX,EAAKY,KAAKzB,GACnB0B,SAAUb,EAAKY,KAAKC,UAChBb,KAEJP,GAAWK,IAAS,kBAAC,iBAAD","file":"11.main.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Error({ error, componentStack, resetErrorBoundary }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Something went wrong:</p>\r\n      <pre>{error.message}</pre>\r\n      <pre>{componentStack}</pre>\r\n      <button onClick={resetErrorBoundary}>Try again</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import React, { useState, lazy, ErrorInfo } from \"react\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POST } from \"../../Queries\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Error from \"../layout/Error\";\r\n\r\nconst PostItem = lazy(() => import(\"./PostItem\"));\r\n\r\nconst Post = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const { loading, data, error, fetchMore, refetch } = useQuery(GET_POST, {\r\n    variables: { id },\r\n  });\r\n  const [spin, setSpin] = useState(true);\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: GET_COMMENTS,\r\n      variables: { cursor: data.post.postComments.pageInfo.endCursor },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        if (!previousResult.post.postComments.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n        const newEdges = fetchMoreResult.post.postComments.edges;\r\n        const pageInfo = fetchMoreResult.post.postComments.pageInfo;\r\n\r\n        return newEdges.length\r\n          ? {\r\n              post: {\r\n                ...previousResult.post,\r\n                postComments: {\r\n                  __typename: previousResult.post.postComments.__typename,\r\n                  edges: [...previousResult.post.posts.edges, ...newEdges],\r\n                  pageInfo,\r\n                },\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  if (loading && !data) {\r\n    return <Spinner size={40} />;\r\n  }\r\n  const { node } = data.posts.edges[0];\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={Error}>\r\n      <div className=\"main\">\r\n        <PostItem\r\n          key={node.id}\r\n          likes={node.likers.length}\r\n          comments={node.commentSet.length}\r\n          user_id={node.user.id}\r\n          username={node.user.username}\r\n          {...node}\r\n        />\r\n        {(loading || spin) && <Spinner />}\r\n      </div>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"sourceRoot":""}