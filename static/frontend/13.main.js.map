{"version":3,"sources":["webpack:///./src/components/post/Post.js"],"names":["PostItem","lazy","Post","id","match","params","useQuery","GET_POST","variables","loading","data","error","fetchMore","refetch","useState","spin","size","node","posts","edges","className","key","comments","user_id","username","text","title","creation","Date"],"mappings":";;;;gtBAMA,IAAMA,EAAWC,gBAAK,kBAAM,iGAqEbC,UAnEF,SAAC,GAIR,IAFQC,EAER,EAHJC,MACEC,OAAUF,GAER,EACiDG,mBAASC,WAAU,CACtEC,UAAW,CAAEL,QADPM,EADJ,EACIA,QAASC,EADb,EACaA,KADb,KACmBC,MADnB,EAC0BC,UAD1B,EACqCC,QAGjBC,oBAAS,IAJ7B,WAIGC,EAJH,UAmCJ,GAAIN,IAAYC,EACd,OAAO,kBAAC,iBAAD,CAASM,KAAM,KApCpB,IAsCIC,EAASP,EAAKQ,MAAMC,MAAM,GAA1BF,KAER,OACE,yBAAKG,UAAU,QACb,kBAACpB,EAAD,CACEqB,IAAKJ,EAAKd,GACVmB,SAAU,GACVC,QAAS,GACTpB,GAAI,GACJqB,SAAS,YACTC,KAAK,IACLC,MAAM,IACNC,SAAU,IAAIC,OACb,KAODnB,GAAWM,IAAS,kBAAC,iBAAD","file":"13.main.js","sourcesContent":["import React, { useState, lazy, ErrorInfo } from \"react\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POST } from \"../../Queries\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\n\r\nconst PostItem = lazy(() => import(\"./PostItem\"));\r\n\r\nconst Post = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const { loading, data, error, fetchMore, refetch } = useQuery(GET_POST, {\r\n    variables: { id },\r\n  });\r\n  const [spin, setSpin] = useState(true);\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: GET_COMMENTS,\r\n      variables: { cursor: data.post.postComments.pageInfo.endCursor },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        if (!previousResult.post.postComments.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n        const newEdges = fetchMoreResult.post.postComments.edges;\r\n        const pageInfo = fetchMoreResult.post.postComments.pageInfo;\r\n\r\n        return newEdges.length\r\n          ? {\r\n              post: {\r\n                ...previousResult.post,\r\n                postComments: {\r\n                  __typename: previousResult.post.postComments.__typename,\r\n                  edges: [...previousResult.post.posts.edges, ...newEdges],\r\n                  pageInfo,\r\n                },\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  if (loading && !data) {\r\n    return <Spinner size={40} />;\r\n  }\r\n  const { node } = data.posts.edges[0];\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <PostItem\r\n        key={node.id}\r\n        comments={50}\r\n        user_id={35}\r\n        id={35}\r\n        username=\"Ethiopian\"\r\n        text=\" \"\r\n        title=\" \"\r\n        creation={new Date()}\r\n      />{\" \"}\r\n      {/*likes={node.likers.length}\r\n        comments={node.commentSet.length}\r\n        user_id={node.user.id}\r\n        username={node.user.username}\r\n        {...node}\r\n  />*/}\r\n      {(loading || spin) && <Spinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"sourceRoot":""}