{"version":3,"sources":["webpack:///./src/components/pages/User.js"],"names":["Offline","lazy","PostItem","User","match","useQuery","GET_USER","variables","id","params","user_loading","loading","user_data","data","user_error","error","USER_POSTS","fetchMore","useContext","AuthContext","user","Logout","AlertContext","removeAlert","setAlert","useState","spin","setSpin","first","following","followers","setFollowing","useMutation","FOLLOW","follow","useEffect","to","className","size","style","margin","isFollowing","userGet","edges","length","userPost","display","username","onClick","then","followUser","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","points","posts","map","node","key","likes","likers","comments","commentSet","user_id","onEnter","query","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","hasNextPage","__typename"],"mappings":"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","file":"13.main.js","sourcesContent":["import React, { useState, useContext, useEffect, lazy } from \"react\";\r\nimport { GET_USER, USER_POSTS, FOLLOW } from \"../../Queries\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport AuthContext from \"../../context/auth/AuthContext\";\r\nimport AlertContext from \"../../context/alert/AlertContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Offline = lazy(() => import(\"./Offline\"));\r\nconst PostItem = lazy(() => import(\"../post/PostItem\"));\r\n\r\nconst User = ({ match }) => {\r\n  const {\r\n    loading: user_loading,\r\n    data: user_data,\r\n    error: user_error,\r\n  } = useQuery(GET_USER, { variables: { id: match.params.id } });\r\n  const { loading, data, error, fetchMore } = useQuery(USER_POSTS, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  const { Logout, user } = useContext(AuthContext);\r\n  const { removeAlert, setAlert } = useContext(AlertContext);\r\n  const [spin, setSpin] = useState(false);\r\n  const [following, setFollowing] = useState({\r\n    first: true,\r\n    following: false,\r\n    followers: \"\",\r\n  });\r\n  const [follow] = useMutation(FOLLOW);\r\n\r\n  useEffect(() => {\r\n    removeAlert();\r\n  }, []);\r\n\r\n  if (user == match.params.id) {\r\n    return <Redirect to=\"/account\" />;\r\n  }\r\n\r\n  if (loading || !data || user_loading || !user_data)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  if (error || user_error) {\r\n    return <Offline />;\r\n  }\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: USER_POSTS,\r\n      variables: {\r\n        cursor: data.userPost.pageInfo.endCursor,\r\n        id: match.params.id,\r\n      },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        const newEdges = fetchMoreResult.userPost.edges;\r\n        const pageInfo = fetchMoreResult.userPost.pageInfo;\r\n\r\n        if (!previousResult.userPost.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n\r\n        return newEdges.length\r\n          ? {\r\n              userPost: {\r\n                __typename: previousResult.userPost.__typename,\r\n                edges: [...previousResult.userPost.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  const followIt = () => {\r\n    follow({ variables: { id: match.params.id } }).then(\r\n      ({ data: { followUser } }) => {\r\n        setFollowing({\r\n          ...following,\r\n          following: !following.following,\r\n          followers: followUser.user.followers.edges.length,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  if (!loading) {\r\n    if (following.first) {\r\n      setFollowing({\r\n        first: false,\r\n        following: user_data.isFollowing,\r\n        followers: user_data.userGet.followers.edges.length,\r\n      });\r\n    }\r\n  }\r\n\r\n  const { userPost } = data;\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"account-info\">\r\n        <div className=\"account-info-top\">\r\n          <span className=\"username\" style={{ display: \"block\" }}>\r\n            {user_data.userGet.username}\r\n          </span>\r\n        </div>\r\n        <button className=\"btn btn-teal\" onClick={followIt}>\r\n          {!following.following ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-user-plus\"\r\n              width=\"25\"\r\n              height=\"25\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"rgb(248, 248, 248)\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\r\n              <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n              <path d=\"M16 11h6m-3 -3v6\" />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-user-minus\"\r\n              width=\"25\"\r\n              height=\"25\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"rgb(248, 248, 248)\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\r\n              <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n              <line x1=\"16\" y1=\"11\" x2=\"22\" y2=\"11\" />\r\n            </svg>\r\n          )}{\" \"}\r\n          {following.following ? \"Unfollow\" : \"Follow\"}\r\n        </button>\r\n        <div className=\"info-mini\">\r\n          <span className=\"info\">\r\n            Posts\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-chevron-right\"\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#607D8B\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <polyline points=\"9 6 15 12 9 18\" />\r\n            </svg>{\" \"}\r\n            {user_data.userGet.posts.edges.length}\r\n          </span>\r\n          <span className=\"info\">\r\n            Followers\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-chevron-right\"\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#607D8B\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <polyline points=\"9 6 15 12 9 18\" />\r\n            </svg>{\" \"}\r\n            {following.followers}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"main\">\r\n        {userPost.edges.map(({ node }) => (\r\n          <PostItem\r\n            key={`${node.id}k`}\r\n            {...node}\r\n            likes={node.likers.length}\r\n            comments={node.commentSet.length}\r\n            user_id={user_data.userGet.id}\r\n            username={user_data.userGet.username}\r\n          />\r\n        ))}\r\n        <Waypoint\r\n          onEnter={() => {\r\n            more();\r\n          }}\r\n        >\r\n          <div className=\"spinner\">{spin && <Spinner size={40} />}</div>\r\n        </Waypoint>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}