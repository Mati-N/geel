{"version":3,"sources":["webpack:///./src/components/pages/Post.js"],"names":["Post"],"mappings":";;;;6DAAA,qEAoEeA,UAFF,kBAAM","file":"13.main.js","sourcesContent":["import React, { useState } from \"react\";\r\n/*import PostItem from \"../post/PostItem\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_POSTS, GET_COMMENTS } from \"../../Queries\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";*/\r\n\r\n/*const Post = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const { loading, data, error, fetchMore, refetch } = useQuery(GET_COMMENTS, {\r\n    variables: { id },\r\n  });\r\n  const { post } = readQuery({\r\n    query: GET_POSTS,\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n\r\n  console.log(post);\r\n  const [spin, setSpin] = useState(true);\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: GET_COMMENTS,\r\n      variables: { cursor: data.postComments.pageInfo.endCursor },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        if (!previousResult.postComments.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n        const newEdges = fetchMoreResult.postComments.edges;\r\n        const pageInfo = fetchMoreResult.postComments.pageInfo;\r\n\r\n        return newEdges.length\r\n          ? {\r\n              postComments: {\r\n                __typename: previousResult.postComments.__typename,\r\n                edges: [...previousResult.posts.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <PostItem\r\n        key={post.id}\r\n        {...post}\r\n        likes={post.likers.length}\r\n        comments={post.commentSet.length}\r\n        user_id={post.user.id}\r\n        username={post.user.username}\r\n      />\r\n      {(loading || spin) && <Spinner />}\r\n    </div>\r\n  );\r\n};*/\r\n\r\nconst Post = () => <h1>I l</h1>;\r\n\r\nexport default Post;\r\n"],"sourceRoot":""}