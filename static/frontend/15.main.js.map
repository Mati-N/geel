{"version":3,"sources":["webpack:///./src/components/pages/ChangePassword.js"],"names":["CustomizeAccount","useState","password","newPassword","disabled","change","state","setState","doCustomize","useMutation","UPDATE_USER","useContext","AlertContext","setAlert","onChange","removeAlert","e","target","name","value","changed","to","className","method","onSubmit","preventDefault","variables","then","data","d","updateUser","ok","message","htmlFor","type","placeholder","id"],"mappings":";;;;uhEA0EeA,UApEU,WAAM,QACHC,mBAAS,CACjCC,SAAU,GACVC,YAAa,GACbC,UAAU,EACVC,QAAQ,IALmB,GACtBC,EADsB,KACfC,EADe,KAOvBC,EAAcC,sBAAYC,eAPH,EAQKC,qBAAWC,WAArCC,EARqB,EAQrBA,SACFC,GATuB,EAQXC,YACD,SAACC,GAChBT,EAAS,EAAD,KAAMD,GAAN,QAAcU,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,WAkBjD,OAAIb,EAAMc,QAAgB,kBAAC,WAAD,CAAUC,GAAG,MAGrC,0BAAMC,UAAU,YAAYC,OAAO,OAAOC,SAlB3B,SAACR,GAChBA,EAAES,iBACFjB,EAAY,CACVkB,UAAW,CAAEvB,YAAaG,EAAMH,YAAaD,SAAUI,EAAMJ,YAC5DyB,MAAK,YAAc,EAAXC,OAEFC,EAAED,KAAKE,WAAWC,GAGrBxB,EAAS,EAAD,KAAMD,GAAN,IAAac,SAAS,KAF9BP,EAASgB,EAAED,KAAKE,WAAWE,QAAS,gBAYxC,uBAAGV,UAAU,MAAb,mBACA,yBAAKA,UAAU,cACb,2BAAOA,UAAU,aAAaW,QAAQ,YAAtC,YAGA,2BACEC,KAAK,WACLZ,UAAU,eACVJ,KAAK,WACLJ,SAAUA,EACVqB,YAAY,WACZhB,MAAOb,EAAMJ,SACbkC,GAAG,cAGP,yBAAKd,UAAU,cACb,2BAAOA,UAAU,aAAaW,QAAQ,eAAtC,gBAGA,2BACEC,KAAK,WACLZ,UAAU,eACVJ,KAAK,cACLJ,SAAUA,EACVqB,YAAY,eACZhB,MAAOb,EAAMH,YACbiC,GAAG,iBAGP,4BAAQF,KAAK,SAASZ,UAAU,eAAelB,SAAUE,EAAMF,UAA/D","file":"15.main.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport AlertContext from \"../../context/alert/AlertContext\";\r\nimport { UPDATE_USER } from \"../../Queries\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst CustomizeAccount = () => {\r\n  const [state, setState] = useState({\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    disabled: false,\r\n    change: true,\r\n  });\r\n  const doCustomize = useMutation(UPDATE_USER);\r\n  const { setAlert, removeAlert } = useContext(AlertContext);\r\n  const onChange = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    doCustomize({\r\n      variables: { newPassword: state.newPassword, password: state.password },\r\n    }).then(({ data }) => {\r\n      if (data) {\r\n        if (!d.data.updateUser.ok) {\r\n          setAlert(d.data.updateUser.message, \"danger\");\r\n        } else {\r\n          setState({ ...state, changed: true });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  if (state.changed) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <form className=\"form-auth\" method=\"post\" onSubmit={onSubmit}>\r\n      <p className=\"h2\">Change Password</p>\r\n      <div className=\"form-group\">\r\n        <label className=\"label-hide\" htmlFor=\"password\">\r\n          Password\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"password\"\r\n          onChange={onChange}\r\n          placeholder=\"Password\"\r\n          value={state.password}\r\n          id=\"password\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"label-hide\" htmlFor=\"newPassword\">\r\n          New Password\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"newPassword\"\r\n          onChange={onChange}\r\n          placeholder=\"New Password\"\r\n          value={state.newPassword}\r\n          id=\"newPassword\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-teal\" disabled={state.disabled}>\r\n        Change\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CustomizeAccount;\r\n"],"sourceRoot":""}