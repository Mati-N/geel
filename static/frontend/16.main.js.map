{"version":3,"sources":["webpack:///./src/Queries.js","webpack:///./src/components/pages/Account.js"],"names":["ADD_USER","gql","LOGIN_USER","GET_POSTS","GET_POST","LIKED","VERIFY_TOKEN","LOGOUT_USER","LIKE","CREATE_POST","REFRESH_TOKEN","REVOKE_TOKEN","SELF_USER","SELF_POSTS","GET_USER","USER_POSTS","FOLLOW","CREATE_COMMENT","Posts","lazy","Account","useQuery","user_loading","loading","user_data","data","user_error","error","fetchMore","Logout","useContext","AuthContext","removeAlert","AlertContext","useState","spin","setSpin","useEffect","className","size","style","margin","post","display","user","username","xmlns","width","height","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","points","posts","edges","length","followers","background","border","onClick","x1","y1","x2","y2","to","onEnter","query","variables","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","hasNextPage","__typename"],"mappings":"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","file":"16.main.js","sourcesContent":["import {\r\n  gql\r\n} from \"@apollo/client\";\r\n\r\nexport const ADD_USER = gql `\r\n  mutation createUser($username: String!, $password: String!) {\r\n    createUser(input: { username: $username, password: $password }) {\r\n      ok\r\n      message\r\n      user {\r\n        username\r\n        id\r\n        password\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_USER = gql `\r\n  mutation tokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(input: { username: $username, password: $password }) {\r\n      payload\r\n      token\r\n      refreshToken\r\n      user {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const GET_POSTS = gql `\r\n  query posts($cursor: String) {\r\n    posts(first: 45, after: $cursor, orderBy: \"creation\") {\r\n      pageInfo {\r\n        endCursor\r\n        hasNextPage\r\n      }\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          text\r\n          likers {\r\n            id\r\n          }\r\n          commentSet {\r\n            edges {\r\n              node {\r\n                id\r\n              }\r\n            }\r\n          }\r\n          creation\r\n          commentCount\r\n          user {\r\n            username\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POST = gql `\r\n  query post($id: ID!, $cursor: String) {\r\n    posts(id: $id) {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          text\r\n          likers {\r\n            id\r\n          }\r\n          commentSet {\r\n            edges {\r\n              node {\r\n                id\r\n              }\r\n            }\r\n          }\r\n          creation\r\n          commentCount\r\n          user {\r\n            username\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    postComments(id: $id, after: $cursor) {\r\n      edges {\r\n        node {\r\n          id\r\n          user {\r\n            username\r\n            id\r\n          }\r\n          content\r\n          creation\r\n        }\r\n      }\r\n      pageInfo {\r\n        endCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const LIKED = gql `\r\n  query liked($post_id: ID!) {\r\n    liked(id: $post_id)\r\n  }\r\n`;\r\n\r\nexport const VERIFY_TOKEN = gql `\r\n  mutation verifyToken($token: String!) {\r\n    verifyToken(input: { token: $token }) {\r\n      payload\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGOUT_USER = gql `\r\n  mutation {\r\n    deleteTokenCookie(input: {}) {\r\n      deleted\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIKE = gql `\r\n  mutation like($post_id: ID!) {\r\n    likePost(postId: $post_id) {\r\n      ok\r\n      post {\r\n        likers {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_POST = gql `\r\n  mutation createPost($text: String!, $title: String!) {\r\n    createPost(input: { text: $text, title: $title }) {\r\n      ok\r\n      post {\r\n        id\r\n        title\r\n        text\r\n        likers {\r\n          id\r\n        }\r\n        commentSet {\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n        creation\r\n        commentCount\r\n        user {\r\n          username\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REFRESH_TOKEN = gql `\r\n  mutation refreshToken($token: String!) {\r\n    refreshToken(input: { refreshToken: $token }) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REVOKE_TOKEN = gql `\r\n  mutation revokeToken($token: String!) {\r\n    revokeToken(input: { refreshToken: $token }) {\r\n      revoked\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SELF_USER = gql `\r\n  query self_user {\r\n    user {\r\n      id\r\n      username\r\n      posts {\r\n        edges {\r\n          node {\r\n            id\r\n          }\r\n        }\r\n      }\r\n      followers {\r\n        edges {\r\n          node {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SELF_POSTS = gql `\r\n  query self_posts($cursor: String) {\r\n    post(first: 20, orderBy: \"creation\", after: $cursor) {\r\n      edges {\r\n        node {\r\n          id\r\n          likers {\r\n            id\r\n          }\r\n          commentSet {\r\n            edges {\r\n              node {\r\n                id\r\n              }\r\n            }\r\n          }\r\n          text\r\n          title\r\n          creation\r\n        }\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n        endCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_USER = gql `\r\n  query get_user($id: ID!) {\r\n    userGet(id: $id) {\r\n      username\r\n      posts {\r\n        edges {\r\n          node {\r\n            id\r\n          }\r\n        }\r\n      }\r\n      followers {\r\n        edges {\r\n          node {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    isFollowing(id: $id)\r\n  }\r\n`;\r\n\r\nexport const USER_POSTS = gql `\r\n  query user_posts($cursor: String, $id: ID!) {\r\n    userPost(first: 10, orderBy: \"creation\", after: $cursor, id: $id) {\r\n      edges {\r\n        node {\r\n          id\r\n          likers {\r\n            id\r\n          }\r\n          commentSet {\r\n            edges {\r\n              node {\r\n                id\r\n              }\r\n            }\r\n          }\r\n          text\r\n          title\r\n          creation\r\n        }\r\n      }\r\n      pageInfo {\r\n        hasNextPage\r\n        endCursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FOLLOW = gql `\r\n  mutation followUser($id: ID!) {\r\n    followUser(id: $id) {\r\n      ok\r\n      user {\r\n        id\r\n        followers {\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_COMMENT = gql `\r\n  mutation createComment($id: ID!, $comment: String!){\r\n    createComment(input: {\r\n      post: $id,\r\n      content: $comment\r\n    }) {\r\n      ok\r\n      comment {\r\n        id\r\n        user {\r\n          username\r\n          id\r\n        }\r\n        content\r\n        creation\r\n      }\r\n      __typename\r\n    }\r\n  }\r\n`;","import React, { useState, useContext, useEffect, lazy } from \"react\";\r\nimport { SELF_POSTS, SELF_USER } from \"../../Queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport AuthContext from \"../../context/auth/AuthContext\";\r\nimport AlertContext from \"../../context/alert/AlertContext\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Posts = lazy(() => import(\"../post/Posts\"));\r\n\r\nconst Account = () => {\r\n  const {\r\n    loading: user_loading,\r\n    data: user_data,\r\n    error: user_error,\r\n  } = useQuery(SELF_USER);\r\n  const { loading, data, error, fetchMore } = useQuery(SELF_POSTS);\r\n  const { Logout } = useContext(AuthContext);\r\n  const { removeAlert } = useContext(AlertContext);\r\n  const [spin, setSpin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    removeAlert();\r\n  }, []);\r\n\r\n  if (loading || !data || user_loading)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  if (error || user_error) return `${error}`;\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: SELF_POSTS,\r\n      variables: { cursor: data.post.pageInfo.endCursor },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        const newEdges = fetchMoreResult.post.edges;\r\n        const pageInfo = fetchMoreResult.post.pageInfo;\r\n\r\n        if (!previousResult.post.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n\r\n        return newEdges.length\r\n          ? {\r\n              post: {\r\n                __typename: previousResult.post.__typename,\r\n                edges: [...previousResult.post.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  const { post } = data;\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"account-info\">\r\n        <div className=\"account-info-top\">\r\n          <span className=\"username\" style={{ display: \"block\" }}>\r\n            {user_data.user.username}\r\n          </span>\r\n        </div>\r\n        <div className=\"info-mini\">\r\n          <span className=\"info\">\r\n            Posts\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-chevron-right\"\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#607D8B\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <polyline points=\"9 6 15 12 9 18\" />\r\n            </svg>{\" \"}\r\n            {user_data.user.posts.edges.length}\r\n          </span>\r\n          <span className=\"info\">\r\n            Followers\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-chevron-right\"\r\n              width=\"34\"\r\n              height=\"34\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"#607D8B\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <polyline points=\"9 6 15 12 9 18\" />\r\n            </svg>{\" \"}\r\n            {user_data.user.followers.edges.length}\r\n          </span>\r\n        </div>\r\n        <div className=\"options-container\">\r\n          <ul className=\"options\">\r\n            <li className=\"option\">\r\n              <button\r\n                style={{\r\n                  background: \"none\",\r\n                  border: \"none\",\r\n                }}\r\n                onClick={Logout}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"icon icon-tabler icon-tabler-logout\"\r\n                  width=\"45\"\r\n                  height=\"45\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"2\"\r\n                  stroke=\"#607D8B\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                  <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\r\n                  <path d=\"M7 12h14l-3 -3m0 6l3 -3\" />\r\n                </svg>{\" \"}\r\n                Logout\r\n              </button>\r\n            </li>\r\n            <li className=\"option\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"icon icon-tabler icon-tabler-pencil\"\r\n                width=\"45\"\r\n                height=\"45\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"2\"\r\n                stroke=\"#607D8B\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                <path d=\"M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4\" />\r\n                <line x1=\"13.5\" y1=\"6.5\" x2=\"17.5\" y2=\"10.5\" />\r\n              </svg>\r\n              <Link to=\"/password\">Change Password</Link>\r\n            </li>\r\n            <li className=\"option\">\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"icon icon-tabler icon-tabler-pencil\"\r\n                width=\"45\"\r\n                height=\"45\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"2\"\r\n                stroke=\"#607D8B\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                <path d=\"M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4\" />\r\n                <line x1=\"13.5\" y1=\"6.5\" x2=\"17.5\" y2=\"10.5\" />\r\n              </svg>\r\n              <Link to=\"/username\">Change Username</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"main\">\r\n        <Posts posts={post.edges} />\r\n        <Waypoint\r\n          onEnter={() => {\r\n            more();\r\n          }}\r\n        >\r\n          <div className=\"spinner\">{spin && <Spinner size={40} />}</div>\r\n        </Waypoint>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"],"sourceRoot":""}