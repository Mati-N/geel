{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/@material-ui/icons/MarkunreadMailboxTwoTone.js","webpack:///./node_modules/@material-ui/icons/utils/createSvgIcon.js","webpack:///./src/components/pages/Notifications.js"],"names":["module","exports","obj","__esModule","_interopRequireDefault","Object","defineProperty","value","default","_react","_default","createElement","Fragment","d","opacity","path","displayName","Component","memo","forwardRef","props","ref","_SvgIcon","_extends2","concat","muiName","NotificationList","lazy","Offline","Notifications","useQuery","GET_NOTIFICATIONS","onError","err","console","log","errorPolicy","loading","data","error","fetchMore","refetch","subscribeToMore","useState","spin","setSpin","className","size","style","margin","onClick","minWidth","variant","color","startIcon","readNotif","selfNotification","edges","length","subscribeToNewNotifications","document","NOTIFICATION_SUB","response","graphQLErrors","networkError","map","message","locations","updateQuery","prev","subscriptionData","newNotificationItem","notificationCreated","assign","__typename","node","onEnter","query","variables","cursor","pageInfo","endCursor","previousResult","fetchMoreResult","hasNextPage","newEdges"],"mappings":"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","file":"18.main.js","sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M10 12H6V8H4v12h16V8H10z\",\n  opacity: \".3\"\n}), _react.default.createElement(\"path\", {\n  d: \"M20 6H10v2h10v12H4V8h2v4h2V4h6V0H6v6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z\"\n})), 'MarkunreadMailboxTwoTone');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}","import React, { useState, lazy } from \"react\";\r\nimport { GET_NOTIFICATIONS, NOTIFICATION_SUB } from \"../../Queries\";\r\nimport { useQuery, useSubscription } from \"@apollo/client\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport NoData from \"../SVG/NoData.svg\";\r\nimport MarkunreadMailboxTwoToneIcon from \"@material-ui/icons/MarkunreadMailboxTwoTone\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst NotificationList = lazy(() => import(\"../layout/NotificationList\"));\r\n\r\nconst Offline = lazy(() => import(\"./Offline\"));\r\n\r\nconst Notifications = () => {\r\n  const {\r\n    loading,\r\n    data,\r\n    error,\r\n    fetchMore,\r\n    refetch,\r\n    subscribeToMore,\r\n  } = useQuery(GET_NOTIFICATIONS, {\r\n    onError: (err) => console.log(err),\r\n    errorPolicy: 'all'\r\n  });\r\n\r\n  const [spin, setSpin] = useState(true);\r\n\r\n  if (loading || !data)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <Offline />\r\n        <button className=\"btn btn-teal\" onClick={refetch}>\r\n          Refresh\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: GET_NOTIFICATIONS,\r\n      variables: { cursor: data.selfNotification.pageInfo.endCursor },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        if (!previousResult.selfNotification.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n        const newEdges = fetchMoreResult.selfNotification.edges;\r\n        const pageInfo = fetchMoreResult.selfNotification.pageInfo;\r\n\r\n        return newEdges.length\r\n          ? {\r\n              selfNotification: {\r\n                __typename: previousResult.selfNotification.__typename,\r\n                edges: [...previousResult.selfNotification.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToNewNotifications = () => {\r\n    subscribeToMore({\r\n      document: NOTIFICATION_SUB,\r\n      onError: ({ response, graphQLErrors, networkError }) => {\r\n        if (graphQLErrors) {\r\n          graphQLErrors.map(({ message, locations, path }) =>\r\n            console.log(\r\n              `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\r\n            ),\r\n          );\r\n        }\r\n        if (networkError) { console.log(`[Network error]: ${networkError}`) };\r\n      },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const newNotificationItem = subscriptionData.data.notificationCreated;\r\n        return Object.assign({}, prev, {\r\n          selfNotification: {\r\n            edges: [\r\n              ...prev.selfNotification.edges,\r\n              {\r\n                __typename: prev.selfNotification.edges[0].__typename,\r\n                node: newNotificationItem\r\n              }\r\n\r\n            ]\r\n          }\r\n        });\r\n      },\r\n      errorPolicy: 'all'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"mx-auto d-block \"\r\n        style={{ minWidth: \"25%\" }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        startIcon={<MarkunreadMailboxTwoToneIcon />}\r\n        onClick={() => readNotif()}\r\n      >\r\n        Read All\r\n      </Button>\r\n      {data.selfNotification.edges.length == 0 && (\r\n        <div className=\"w-75 h-75 m-auto d-flex align-items-center justify-content-center flex-column\">\r\n          <NoData className=\"w-50 h-50\" />\r\n        </div>\r\n      )}\r\n      <NotificationList\r\n        subscribeToNewNotifications={subscribeToNewNotifications}\r\n        edges={data.selfNotification.edges}\r\n      />\r\n      <Waypoint onEnter={more}>\r\n        <div className=\"refetch-and-spinner\">\r\n          <button className=\"btn btn-teal\" onClick={() => refetch()}>\r\n            Refetch\r\n          </button>\r\n          {spin && (\r\n            <div className=\"spinner\">\r\n              <Spinner size={40} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Waypoint>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"sourceRoot":""}