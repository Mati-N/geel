{"version":3,"sources":["webpack:///./src/components/SVG/ForwardPointer.svg","webpack:///./src/components/pages/User.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref","d","stroke","_ref2","props","className","width","height","strokeWidth","fill","strokeLinecap","strokeLinejoin","Offline","lazy","Posts","User","match","useQuery","GET_USER","variables","id","params","user_loading","loading","user_data","data","user_error","error","USER_POSTS","fetchMore","useContext","AuthContext","user","Logout","AlertContext","removeAlert","setAlert","useState","spin","setSpin","first","following","followers","setFollowing","follow","useMutation","FOLLOW","useEffect","to","size","style","margin","isFollowing","userGet","followerCount","userPost","display","username","onClick","then","followUser","xmlns","viewBox","cx","cy","r","x1","y1","x2","y2","posts","edges","self","onEnter","query","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","hasNextPage","__typename"],"mappings":"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","file":"19.main.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  stroke: \"none\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 6l6 6-6 6\"\n});\n\nfunction SvgForwardPointer(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"ForwardPointer_svg__icon ForwardPointer_svg__icon-tabler ForwardPointer_svg__icon-tabler-chevron-right\",\n    width: 34,\n    height: 34,\n    strokeWidth: 1.5,\n    stroke: \"#607D8B\",\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, props), _ref, _ref2);\n}\n\nexport default SvgForwardPointer;","import React, { useState, useContext, useEffect, lazy } from \"react\";\r\nimport { GET_USER, USER_POSTS, FOLLOW } from \"../../Queries\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport AuthContext from \"../../context/auth/AuthContext\";\r\nimport AlertContext from \"../../context/alert/AlertContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ForwardPointer from \"../SVG/ForwardPointer.svg\";\r\nconst Offline = lazy(() => import(\"./Offline\"));\r\nconst Posts = lazy(() => import(\"../post/Posts\"));\r\n\r\nconst User = ({ match }) => {\r\n  const {\r\n    loading: user_loading,\r\n    data: user_data,\r\n    error: user_error,\r\n  } = useQuery(GET_USER, { variables: { id: match.params.id } });\r\n  const { loading, data, error, fetchMore } = useQuery(USER_POSTS, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  const { Logout, user } = useContext(AuthContext);\r\n  const { removeAlert, setAlert } = useContext(AlertContext);\r\n  const [spin, setSpin] = useState(false);\r\n  const [following, setFollowing] = useState({\r\n    first: true,\r\n    following: false,\r\n    followers: \"\",\r\n  });\r\n  const [follow] = useMutation(FOLLOW);\r\n\r\n  useEffect(() => {\r\n    removeAlert();\r\n  }, []);\r\n\r\n  if (user == match.params.id) {\r\n    return <Redirect to=\"/account\" />;\r\n  }\r\n\r\n  if (loading || !data || user_loading || !user_data)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  if (error || user_error) {\r\n    return <Offline />;\r\n  }\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: USER_POSTS,\r\n      variables: {\r\n        cursor: data.userPost.pageInfo.endCursor,\r\n        id: match.params.id,\r\n      },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        const newEdges = fetchMoreResult.userPost.edges;\r\n        const pageInfo = fetchMoreResult.userPost.pageInfo;\r\n\r\n        if (!previousResult.userPost.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n\r\n        return newEdges.length\r\n          ? {\r\n              userPost: {\r\n                __typename: previousResult.userPost.__typename,\r\n                edges: [...previousResult.userPost.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  const followIt = () => {\r\n    follow({ variables: { id: match.params.id } }).then(\r\n      ({ data: { followUser } }) => {\r\n        setFollowing({\r\n          ...following,\r\n          following: !following.following,\r\n          followers: followUser.user.followerCount,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  if (!loading) {\r\n    if (following.first) {\r\n      setFollowing({\r\n        first: false,\r\n        following: user_data.isFollowing,\r\n        followers: user_data.userGet.followerCount,\r\n      });\r\n    }\r\n  }\r\n\r\n  const { userPost } = data;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"account-info\">\r\n        <div className=\"account-info-top\">\r\n          <span className=\"username\" style={{ display: \"block\" }}>\r\n            {user_data.userGet.username}\r\n          </span>\r\n        </div>\r\n        <button className=\"btn btn-teal\" onClick={followIt}>\r\n          {!following.following ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-user-plus\"\r\n              width=\"25\"\r\n              height=\"25\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"rgb(248, 248, 248)\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\r\n              <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n              <path d=\"M16 11h6m-3 -3v6\" />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"icon icon-tabler icon-tabler-user-minus\"\r\n              width=\"25\"\r\n              height=\"25\"\r\n              viewBox=\"0 0 24 24\"\r\n              strokeWidth=\"1.5\"\r\n              stroke=\"rgb(248, 248, 248)\"\r\n              fill=\"none\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            >\r\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\" />\r\n              <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n              <line x1=\"16\" y1=\"11\" x2=\"22\" y2=\"11\" />\r\n            </svg>\r\n          )}{\" \"}\r\n          {following.following ? \"Unfollow\" : \"Follow\"}\r\n        </button>\r\n        <div className=\"info-mini\">\r\n          <span className=\"info\">\r\n            Posts\r\n            <ForwardPointer /> {user_data.userGet.posts.edges.length}\r\n          </span>\r\n          <span className=\"info\">\r\n            Followers\r\n            <ForwardPointer /> {following.followerCount}\r\n          </span>\r\n        </div>\r\n        <Posts\r\n          posts={userPost.edges}\r\n          self={true}\r\n          username={user_data.userGet.username}\r\n          id={match.params.id}\r\n        />\r\n        <Waypoint\r\n          onEnter={() => {\r\n            more();\r\n          }}\r\n        >\r\n          <div className=\"spinner\">{spin && <Spinner size={40} />}</div>\r\n        </Waypoint>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}