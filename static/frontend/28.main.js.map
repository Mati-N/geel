{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/Card/index.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/CardActions/index.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/index.js","webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./node_modules/@material-ui/core/esm/Paper/index.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./node_modules/@material-ui/core/esm/Typography/index.js"],"names":["styles","root","overflow","Card","props","ref","classes","className","_props$raised","raised","other","elevation","propTypes","children","node","object","string","bool","name","display","alignItems","padding","spacing","marginLeft","CardActions","_props$disableSpacing","disableSpacing","paddingBottom","CardContent","_props$component","component","Component","elementType","theme","elevations","shadows","forEach","shadow","index","concat","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","rounded","borderRadius","shape","outlined","border","divider","Paper","_props$square","square","_props$elevation","_props$variant","variant","number","undefined","Error","oneOf","margin","body2","typography","body1","caption","button","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","noWrap","textOverflow","whiteSpace","gutterBottom","marginBottom","paragraph","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","defaultVariantMapping","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variantMapping","variantMapping","isRequired"],"mappings":"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","file":"28.main.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","export { default } from './Card';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","export { default } from './CardActions';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","export { default } from './CardContent';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","export { default } from './Paper';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","export { default } from './Typography';"],"sourceRoot":""}