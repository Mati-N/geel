{"version":3,"sources":["webpack:///./src/components/post/PostItem.js"],"names":["Liked","lazy","Heart","Comments","PostItem","text","title","username","id","likes","creation","user_id","initialState","done","hasMore","height","loading","comments","useLazyQuery","LIKED","variables","post_id","onCompleted","data","setState","state","liked","useState","hovered","setHovered","self","useRef","useMutation","LIKE","likePost","expandText","useSpring","to","maxHeight","expand","current","scrollHeight","from","duration","useEffect","clientHeight","className","date","seconds","Math","floor","Date","interval","flr","timeSince","pre","ref","style","onClick","error","console","log","then","post","likers","length","onMouseOver","onMouseOut"],"mappings":"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","file":"1.main.js","sourcesContent":["import React, { useState, useEffect, useRef, lazy } from \"react\";\r\nimport { useLazyQuery, useMutation, from } from \"@apollo/client\";\r\nimport { LIKED, LIKE } from \"../../Queries\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nconst Liked = lazy(() => import(\"../SVG/Like.svg\"));\r\nconst Heart = lazy(() => import(\"../SVG/Heart.svg\"));\r\nconst Comments = lazy(() => import(\"../SVG/Comments.svg\"));\r\n\r\nconst PostItem = ({\r\n  text,\r\n  title,\r\n  username,\r\n  id,\r\n  likes,\r\n  creation,\r\n  user_id,\r\n  comments,\r\n}) => {\r\n  const initialState = {\r\n    done: false,\r\n    likes,\r\n    hasMore: false,\r\n    height: \"32vh\",\r\n    loading: false,\r\n    comments,\r\n  };\r\n  const [liked] = useLazyQuery(LIKED, {\r\n    variables: { post_id: id },\r\n    onCompleted: (data) => {\r\n      setState({ ...state, liked: data.liked });\r\n    },\r\n  });\r\n\r\n  const [hovered, setHovered] = useState(false);\r\n  const self = useRef(null);\r\n\r\n  const [likePost] = useMutation(LIKE);\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const expandText = useSpring({\r\n    to: {\r\n      maxHeight: state.expand ? `${self.current.scrollHeight}px` : \"230px\",\r\n      height: state.expand ? `${self.current.scrollHeight}px` : \"230px\",\r\n    },\r\n    from: {\r\n      maxHeight: !state.expand ? \"230px\" : `${self.current.scrollHeight}px`,\r\n      height: !state.expand ? \"230px\" : `${self.current.scrollHeight}px`,\r\n    },\r\n    duration: \"1s\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    liked();\r\n    setState({\r\n      ...state,\r\n      hasMore: self.current.scrollHeight > self.current.clientHeight,\r\n      loading: false,\r\n    });\r\n  }, []);\r\n\r\n  const timeSince = (date) => {\r\n    let seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n    let interval = seconds / 31536000;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return Math.floor(interval) + (flr === 1 ? \" year\" : \" years\");\r\n    }\r\n\r\n    interval = seconds / 2592000;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return flr + (flr === 1 ? \" month\" : \" months\");\r\n    }\r\n\r\n    interval = seconds / 86400;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return Math.floor(flr) + (flr === 1 ? \" day\" : \" days\");\r\n    }\r\n\r\n    interval = seconds / 3600;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return flr + (flr === 1 ? \" hour\" : \" hours\");\r\n    }\r\n\r\n    interval = seconds / 60;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return flr + (flr == 1 ? \" minute\" : \" minutes\");\r\n    }\r\n    return \"Seconds\";\r\n  };\r\n\r\n  const like = () => {\r\n    likePost({ variables: { post_id: id } })\r\n      .catch((error) => console.log(error))\r\n      .then(({ data: { likePost } }) => {\r\n        setState({\r\n          ...state,\r\n          liked: !state.liked,\r\n          likes: likePost.post.likers.length,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"post card\">\r\n      <div className=\"post-top card-top\">\r\n        <div className=\"post-info-top\">\r\n          <Link to={`user/${user_id}`} className=\"post-user\">\r\n            {\" \"}\r\n            {username}{\" \"}\r\n          </Link>\r\n          <small className=\"post-time\">\r\n            {timeSince(new Date(creation))} ago{\" \"}\r\n          </small>\r\n        </div>\r\n        <h5 className=\"post-title\">{title}</h5>\r\n      </div>\r\n      <animated.pre\r\n        ref={self}\r\n        className={`post-text`}\r\n        style={state.hasMore ? expandText : {}}\r\n      >\r\n        {text}\r\n        {state.hasMore && (\r\n          <button\r\n            className=\"more\"\r\n            onClick={() => {\r\n              setState({ ...state, expand: !state.expand });\r\n            }}\r\n          >\r\n            {state.expand ? \"less\" : \"more\"}\r\n          </button>\r\n        )}\r\n      </animated.pre>\r\n      {!state.loading && (\r\n        <div className=\"info-bottom\">\r\n          <span\r\n            className=\"like\"\r\n            onClick={() => {\r\n              like();\r\n            }}\r\n            onMouseOver={() => setHovered(true)}\r\n            onMouseOut={() => setHovered(false)}\r\n          >\r\n            {!hovered ? (\r\n              state.liked ? (\r\n                <Liked className=\"like-icon\" />\r\n              ) : (\r\n                <Heart className=\"like-icon\" />\r\n              )\r\n            ) : !state.liked ? (\r\n              <Liked className=\"like-icon\" />\r\n            ) : (\r\n              <Heart className=\"like-icon\" />\r\n            )}\r\n            {state.likes > 0 && state.likes}\r\n          </span>\r\n          <span className=\"like\">\r\n            <Link to={`/post/${id}`}>\r\n              <Comments />\r\n            </Link>\r\n            {state.comments > 0 && state.comments}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n"],"sourceRoot":""}