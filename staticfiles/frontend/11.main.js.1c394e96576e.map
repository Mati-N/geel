{"version":3,"sources":["webpack:///./src/components/auth/Register.js"],"names":["Register","useState","username","password","registerInfo","setRegisterInfo","disabled","loading","setDisabled","Auth","useContext","AuthContext","AlertContext","setAlert","removeAlert","useEffect","onChange","e","name","target","value","length","className","method","onSubmit","preventDefault","htmlFor","type","placeholder","id","size","style","margin"],"mappings":";;;;++DA8GeA,UAzGf,WAAoB,QACsBC,mBAAS,CAC/CC,SAAU,GACVC,SAAU,KAHM,GACXC,EADW,KACGC,EADH,SAKYJ,oBAAS,GALrB,kBAMcA,mBAAS,CAAEK,UAAU,EAAMC,SAAS,IANlD,IAMXD,EANW,KAMDE,EANC,KAOZC,EAAOC,qBAAWC,WAPN,EAQgBD,qBAAWE,WAArCC,EARU,EAQVA,SAAUC,EARA,EAQAA,YAElBC,qBAAU,WACRD,MACC,IAEH,IAAME,EAAW,SAACC,GAChB,IAAIC,EAAOD,EAAEE,OAAOD,KACpBb,EAAgB,EAAD,KAAMD,GAAN,QAAqBc,EAAOD,EAAEE,OAAOC,SACvC,aAATF,EACED,EAAEE,OAAOC,MAAMC,OAAS,GAC1BR,EAAS,qBAAsB,WAC/BL,EAAY,EAAD,KAAMF,GAAN,IAAgBA,UAAU,MAErCF,EAAaD,SAASkB,OAAS,GAC/BJ,EAAEE,OAAOC,MAAMC,OAAS,IAExBP,IACAN,EAAY,EAAD,KAAMF,GAAN,IAAgBA,UAAU,MAErB,aAATY,IACLD,EAAEE,OAAOC,MAAMC,OAAS,GAC1BR,EAAS,qBAAsB,WAC/BL,EAAY,EAAD,KAAMF,GAAN,IAAgBA,UAAU,MAErCF,EAAaF,SAASmB,OAAS,GAC/BJ,EAAEE,OAAOC,MAAMC,OAAS,IAExBP,IACAN,EAAY,EAAD,KAAMF,GAAN,IAAgBA,UAAU,QAc3C,OACE,yBAAKgB,UAAU,QACb,0BAAMA,UAAU,YAAYC,OAAO,OAAOC,SAZ7B,SAACP,GAChBA,EAAEQ,iBACFjB,EAAY,CAAEF,UAAU,EAAMC,SAAS,IAET,KAA1BH,EAAaF,UACfO,EAAKT,SAASI,EAAaF,SAAUE,EAAaD,UAEpDK,EAAY,CAAEF,UAAU,EAAOC,SAAS,MAMpC,uBAAGe,UAAU,MAAb,YACA,yBAAKA,UAAU,cACb,2BAAOA,UAAU,aAAaI,QAAQ,YAAtC,YAGA,2BACEC,KAAK,OACLL,UAAU,eACVJ,KAAK,WACLF,SAAUA,EACVY,YAAY,WACZC,GAAG,WACHT,MAAOhB,EAAaF,YAGxB,yBAAKoB,UAAU,cACb,2BAAOA,UAAU,aAAaI,QAAQ,YAAtC,YAGA,2BACEG,GAAG,WACHF,KAAK,WACLL,UAAU,eACVJ,KAAK,WACLF,SAAUA,EACVY,YAAY,WACZR,MAAOhB,EAAaD,YAIxB,4BACEwB,KAAK,SACLL,UAAU,eACVhB,SAAUA,EAASA,UAElBA,EAASC,QACR,kBAAC,iBAAD,CACEuB,KAAM,GACNC,MAAO,CACLC,OAAQ,UAIZ","file":"11.main.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../context/auth/AuthContext\";\r\nimport AlertContext from \"../../context/alert/AlertContext\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\n\r\nfunction Register() {\r\n  const [registerInfo, setRegisterInfo] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [disabled, setDisabled] = useState({ disabled: true, loading: false });\r\n  const Auth = useContext(AuthContext);\r\n  const { setAlert, removeAlert } = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    removeAlert();\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    let name = e.target.name;\r\n    setRegisterInfo({ ...registerInfo, [name]: e.target.value });\r\n    if (name === \"username\") {\r\n      if (e.target.value.length < 1) {\r\n        setAlert(\"Username too short\", \"warning\");\r\n        setDisabled({ ...disabled, disabled: true });\r\n      } else if (\r\n        registerInfo.password.length > 8 &&\r\n        e.target.value.length > 0\r\n      ) {\r\n        removeAlert();\r\n        setDisabled({ ...disabled, disabled: false });\r\n      }\r\n    } else if (name === \"password\")\r\n      if (e.target.value.length < 8) {\r\n        setAlert(\"Password too short\", \"warning\");\r\n        setDisabled({ ...disabled, disabled: true });\r\n      } else if (\r\n        registerInfo.username.length > 0 &&\r\n        e.target.value.length > 8\r\n      ) {\r\n        removeAlert();\r\n        setDisabled({ ...disabled, disabled: false });\r\n      }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setDisabled({ disabled: true, loading: true });\r\n\r\n    if (registerInfo.username !== \"\") {\r\n      Auth.Register(registerInfo.username, registerInfo.password);\r\n    }\r\n    setDisabled({ disabled: false, loading: false });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <form className=\"form-auth\" method=\"post\" onSubmit={onSubmit}>\r\n        <p className=\"h2\">Register</p>\r\n        <div className=\"form-group\">\r\n          <label className=\"label-hide\" htmlFor=\"username\">\r\n            Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            onChange={onChange}\r\n            placeholder=\"Username\"\r\n            id=\"username\"\r\n            value={registerInfo.username}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"label-hide\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            onChange={onChange}\r\n            placeholder=\"Password\"\r\n            value={registerInfo.password}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-teal\"\r\n          disabled={disabled.disabled}\r\n        >\r\n          {disabled.loading ? (\r\n            <Spinner\r\n              size={40}\r\n              style={{\r\n                margin: \"auto\",\r\n              }}\r\n            />\r\n          ) : (\r\n            \"Register\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}