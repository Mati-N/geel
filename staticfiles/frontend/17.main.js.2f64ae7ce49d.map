{"version":3,"sources":["webpack:///./src/components/pages/NewPost.js"],"names":["NewPost","useState","title","content","state","setState","disabled","setDisabled","sent","setSent","addPost","useMutation","CREATE_POST","useContext","AlertContext","setAlert","removeAlert","onChange","e","name","target","value","length","substring","useEffect","to","onSubmit","preventDefault","variables","text","update","cache","data","posts","readQuery","query","GET_POSTS","console","log","newData","edges","__typename","node","createPost","post","writeQuery","then","ok","method","className","htmlFor","type","placeholder","aria-describedby"],"mappings":";;;;q2EAiIeA,UA1HC,WAAM,UACMC,mBAAS,CAAEC,MAAO,GAAIC,QAAS,KADrC,GACbC,EADa,KACNC,EADM,SAEYJ,oBAAS,GAFrB,GAEbK,EAFa,KAEHC,EAFG,SAGIN,oBAAS,GAHb,GAGbO,EAHa,KAGPC,EAHO,KAIbC,EAJa,EAIFC,sBAAYC,eAJV,QAKcC,qBAAWC,WAArCC,EALY,EAKZA,SAAUC,EALE,EAKFA,YAEZC,EAAW,SAACC,GAChB,IAAIC,EAAOD,EAAEE,OAAOD,KAEpB,OADAd,EAAS,EAAD,KAAMD,GAAN,QAAce,EAAOD,EAAEE,OAAOC,SAC9BF,GACN,IAAK,QACCD,EAAEE,OAAOC,MAAMC,OAAS,GAC1BP,EAAS,kBAAmB,WAC5BR,GAAY,IACHW,EAAEE,OAAOC,MAAMC,OAAS,KACjCP,EAAS,iBAAkB,WAC3BV,EAAS,EAAD,KAAMD,GAAN,IAAaF,MAAOE,EAAMF,MAAMqB,UAAU,EAAG,QACrDhB,GAAY,IACHH,EAAMD,QAAQmB,OAAS,GAAKlB,EAAMD,QAAQmB,QAAU,OAC7DN,IACAT,GAAY,IAEhB,IAAK,UACCW,EAAEE,OAAOC,MAAMC,OAAS,GAC1BP,EAAS,oBAAqB,WAC9BR,GAAY,IACHW,EAAEE,OAAOC,MAAMC,OAAS,MACjCP,EAAS,mBAAoB,WAC7BV,EAAS,EAAD,KAAMD,GAAN,IAAaD,QAASC,EAAMD,QAAQoB,UAAU,EAAG,SACzDhB,GAAY,IACHH,EAAMF,MAAMoB,OAAS,GAAKlB,EAAMF,MAAMoB,QAAU,MACzDN,IACAT,GAAY,MAKpBiB,qBAAU,WACRR,MACC,IA0CH,OAAIR,EAAa,kBAAC,WAAD,CAAUiB,GAAG,MAG5B,oCACE,0BAAMC,SA5CO,SAACR,GAChBA,EAAES,iBACFjB,EAAQ,CACNkB,UAAW,CAAE1B,MAAOE,EAAMF,MAAO2B,KAAMzB,EAAMD,SAC7C2B,OAAQ,SAACC,EAAD,GAAqB,IAAXC,EAAW,EAAXA,KAChB,GAAID,EAAO,KACHE,EAAUF,EAAMG,UAAU,CAAEC,MAAOC,cAAnCH,MACNI,QAAQC,IAAIL,GACZ,IAAMM,EAAU,EAAH,KACRN,GADQ,IAEXO,MAAO,CACL,CACEC,WAAY,eACZC,KAAMV,EAAKW,WAAWC,OAHrB,SAKAX,EAAMO,UAGbT,EAAMc,WAAW,CACfV,MAAOC,YACPJ,KAAM,CACJC,MAAOM,SAnBjB,OAyBS,SAACrB,GAAD,OAAOmB,QAAQC,IAAIpB,MACzB4B,MAAK,SAACd,GACDA,IACW,OAATA,GAAiBA,EAAKA,KAAKW,WAAWI,IACxChC,EAAS,YAAa,WACtBN,GAAQ,IAERM,EAAS,uBAAwB,gBAUbiC,OAAO,OAAOC,UAAU,aAChD,yBAAKA,UAAU,cACb,2BAAOA,UAAU,aAAaC,QAAQ,SAAtC,SAGA,6BACEC,KAAK,OACLF,UAAU,eACV9B,KAAK,QACLiC,YAAY,QACZC,mBAAiB,YACjBhC,MAAOjB,EAAMF,MACbe,SAAUA,GAPZ,OAQO,WAGT,yBAAKgC,UAAU,cACb,2BAAOC,QAAQ,WAAf,WACA,mCACE/B,KAAK,UACLE,MAAOjB,EAAMyB,KACboB,UAAU,gBAHZ,OAIO,WAJP,WAKO,KALP,eAMYhC,GANZ,SAOK,WAPL,KAUF,4BAAQX,SAAUA,EAAU6C,KAAK,SAASF,UAAU,gBAApD","file":"17.main.js","sourcesContent":["import React, { useState, useContext, useEffect, lazy } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { CREATE_POST, GET_POSTS } from \"../../Queries\";\r\nimport AlertContext from \"../../context/alert/AlertContext\";\r\n//const { Redirect } = lazy(() => import(\"react-router-dom\"));\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst NewPost = () => {\r\n  const [state, setState] = useState({ title: \"\", content: \"\" });\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [sent, setSent] = useState(false);\r\n  const [addPost] = useMutation(CREATE_POST);\r\n  const { setAlert, removeAlert } = useContext(AlertContext);\r\n\r\n  const onChange = (e) => {\r\n    let name = e.target.name;\r\n    setState({ ...state, [name]: e.target.value });\r\n    switch (name) {\r\n      case \"title\":\r\n        if (e.target.value.length < 1) {\r\n          setAlert(\"Title too short\", \"warning\");\r\n          setDisabled(true);\r\n        } else if (e.target.value.length > 260) {\r\n          setAlert(\"Title too long\", \"warning\");\r\n          setState({ ...state, title: state.title.substring(0, 260) });\r\n          setDisabled(true);\r\n        } else if (state.content.length > 0 && state.content.length <= 5500) {\r\n          removeAlert();\r\n          setDisabled(false);\r\n        }\r\n      case \"content\":\r\n        if (e.target.value.length < 1) {\r\n          setAlert(\"Content too short\", \"warning\");\r\n          setDisabled(true);\r\n        } else if (e.target.value.length > 5500) {\r\n          setAlert(\"Content too long\", \"warning\");\r\n          setState({ ...state, content: state.content.substring(0, 5500) });\r\n          setDisabled(true);\r\n        } else if (state.title.length > 0 && state.title.length <= 260) {\r\n          removeAlert();\r\n          setDisabled(false);\r\n        }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    removeAlert();\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addPost({\r\n      variables: { title: state.title, text: state.content },\r\n      update: (cache, { data }) => {\r\n        if (cache) {\r\n          let { posts } = cache.readQuery({ query: GET_POSTS });\r\n          console.log(posts);\r\n          const newData = {\r\n            ...posts,\r\n            edges: [\r\n              {\r\n                __typename: \"PostNodeEdge\",\r\n                node: data.createPost.post,\r\n              },\r\n              ...posts.edges,\r\n            ],\r\n          };\r\n          cache.writeQuery({\r\n            query: GET_POSTS,\r\n            data: {\r\n              posts: newData,\r\n            },\r\n          });\r\n        }\r\n      },\r\n    })\r\n      .catch((e) => console.log(e))\r\n      .then((data) => {\r\n        if (data) {\r\n          if (data !== null && data.data.createPost.ok) {\r\n            setAlert(\"Post Sent\", \"primary\");\r\n            setSent(true);\r\n          } else {\r\n            setAlert(\"Something went wrong\", \"warning\");\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  if (sent) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} method=\"post\" className=\"form-auth\">\r\n        <div className=\"form-group\">\r\n          <label className=\"label-hide\" htmlFor=\"title\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            aria-describedby=\"emailHelp\"\r\n            value={state.title}\r\n            onChange={onChange}\r\n            name=\"title\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"content\">Content</label>\r\n          <textarea\r\n            name=\"content\"\r\n            value={state.text}\r\n            className=\"form-control\"\r\n            name=\"content\"\r\n            rows=\"3\"\r\n            onChange={onChange}\r\n            id=\"content\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={disabled} type=\"submit\" className=\"btn btn-teal\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"sourceRoot":""}