{"version":3,"sources":["webpack:///./src/components/Routing/AuthenticationRoute.js","webpack:///./src/components/Routing/PrivateRoute.js","webpack:///./src/components/Routing/Routes.js"],"names":["AuthenticationRoute","Component","component","rest","auth","isAuthenticated","useRecoilValue","authAtom","render","props","className","size","style","to","fallback","margin","PrivateRoute","Error","lazy","Edit","Post","Home","FollowingPosts","Account","NewPost","Login","Register","NotFound","User","Notifications","Routes","location","useLocation","transitions","useTransition","pathname","from","opacity","transform","enter","leave","duration","config","stiff","map","item","key","div","FallbackComponent","exact","path"],"mappings":"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","file":"19.main.js","sourcesContent":["import React, { useContext, Suspense } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { authAtom } from \"../../atoms\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\n\r\nconst AuthenticationRoute = ({ component: Component, auth, ...rest }) => {\r\n  const { isAuthenticated } = useRecoilValue(authAtom);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuthenticated === null)\r\n          return (\r\n            <div className=\"spinner\">\r\n              <Spinner size={60} style={{}} />\r\n            </div>\r\n          );\r\n        else if (isAuthenticated) {\r\n          return <Redirect to=\"/\" />;\r\n        } else {\r\n          return (\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"spinner\">\r\n                  <Spinner\r\n                    size={50}\r\n                    style={{\r\n                      margin: \"auto\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              }\r\n            >\r\n              <Component {...props} />\r\n            </Suspense>\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthenticationRoute;\r\n","import React, { useContext, Suspense } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { authAtom } from \"../../atoms\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\r\n  const { isAuthenticated } = useRecoilValue(authAtom);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuthenticated === null)\r\n          return (\r\n            <div className=\"spinner\">\r\n              <Spinner size={68} />\r\n            </div>\r\n          );\r\n        else if (!isAuthenticated) {\r\n          return <Redirect to=\"/login\" />;\r\n        } else {\r\n          return (\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"spinner\">\r\n                  <Spinner\r\n                    size={50}\r\n                    style={{\r\n                      margin: \"auto\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              }\r\n            >\r\n              <Component {...props} />\r\n            </Suspense>\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext, lazy, Suspense } from \"react\";\r\nimport { Switch, useLocation, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport AuthenticationRoute from \"./AuthenticationRoute\";\r\nimport { useTransition, animated, config } from \"react-spring\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\n\r\nconst Error = lazy(() => import(\"../layout/Error\"));\r\nconst Edit = lazy(() => import(\"../pages/Edit\"));\r\nconst Post = lazy(() => import(\"../post/Post\"));\r\nconst Home = lazy(() => import(\"../pages/Home\"));\r\nconst FollowingPosts = lazy(() => import(\"../pages/FollowingPosts\"));\r\nconst Account = lazy(() => import(\"../pages/Account\"));\r\nconst NewPost = lazy(() => import(\"../pages/NewPost\"));\r\nconst Login = lazy(() => import(\"../auth/Login\"));\r\nconst Register = lazy(() => import(\"../auth/Register\"));\r\nconst NotFound = lazy(() => import(\"../pages/NotFound\"));\r\nconst User = lazy(() => import(\"../pages/User\"));\r\nconst Notifications = lazy(() => import(\"../pages/Notifications\"));\r\n\r\nconst Routes = () => {\r\n  const location = useLocation();\r\n\r\n  const transitions = useTransition(location, (location) => location.pathname, {\r\n    from: {\r\n      opacity: 0,\r\n      transform: \"translateX(100%)\",\r\n    },\r\n    enter: {\r\n      opacity: 1,\r\n      transform: \"translateX(0%)\",\r\n    },\r\n    leave: {\r\n      opacity: 0,\r\n      transform: \"translateX(-70%)\",\r\n    },\r\n    duration: \"0.1s\",\r\n    config: config.stiff,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => (\r\n        <animated.div\r\n          className=\"transition-page\"\r\n          key={`${key}anim`}\r\n          style={props}\r\n        >\r\n          <div className=\"page\">\r\n            <ErrorBoundary FallbackComponent={Error}>\r\n              <Suspense\r\n                fallback={\r\n                  <div className=\"main\">\r\n                    <div className=\"spinner\">\r\n                      <Spinner\r\n                        size={50}\r\n                        style={{\r\n                          margin: \"auto\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                }\r\n              >\r\n                <Switch location={item}>\r\n                  <AuthenticationRoute exact path=\"/login\" component={Login} />\r\n                  <AuthenticationRoute\r\n                    exact\r\n                    path=\"/register\"\r\n                    component={Register}\r\n                  />\r\n\r\n                  <PrivateRoute exact path=\"/all\" component={Home} />\r\n                  <PrivateRoute exact path=\"/\" component={FollowingPosts} />\r\n                  <PrivateRoute exact path=\"/add-post\" component={NewPost} />\r\n                  <PrivateRoute exact path=\"/account\" component={Account} />\r\n                  <PrivateRoute exact path=\"/user/:id\" component={User} />\r\n                  <PrivateRoute exact path=\"/post/:id\" component={Post} />\r\n\r\n                  <PrivateRoute\r\n                    exact\r\n                    path=\"/notifications\"\r\n                    component={Notifications}\r\n                  />\r\n                  <PrivateRoute exact path=\"/edit\" component={Edit} />\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </Suspense>\r\n            </ErrorBoundary>\r\n          </div>\r\n        </animated.div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n"],"sourceRoot":""}