{"version":3,"sources":["webpack:///./src/components/pages/Home.js"],"names":["Offline","lazy","Posts","Home","useQuery","GET_POSTS","loading","data","error","fetchMore","refetch","useState","spin","setSpin","className","size","style","margin","onClick","to","posts","edges","self","id","more","query","variables","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","hasNextPage","newEdges","length","__typename"],"mappings":";;;;2qDAKA,IAAMA,EAAUC,gBAAK,kBAAM,gGACrBC,EAAQD,gBAAK,kBAAM,uHA8EVE,UA5Ef,WAAgB,MACuCC,mBAASC,aAAtDC,EADM,EACNA,QAASC,EADH,EACGA,KAAMC,EADT,EACSA,MAAOC,EADhB,EACgBA,UAAWC,EAD3B,EAC2BA,QAD3B,IAEUC,oBAAS,GAFnB,GAEPC,EAFO,KAEDC,EAFC,KAId,OAAIP,IAAYC,EAEZ,yBAAKO,UAAU,WACb,kBAAC,iBAAD,CACEC,KAAM,GACNC,MAAO,CACLC,OAAQ,WAMdT,EAEA,oCACE,kBAACR,EAAD,MACA,4BAAQc,UAAU,eAAeI,QAASR,GAA1C,YAkCJ,oCACE,wBAAII,UAAU,qCACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,mBAAb,cAEF,wBAAIA,UAAU,YACZ,kBAAC,OAAD,CAAMA,UAAU,WAAWK,GAAG,KAA9B,eAKJ,kBAACjB,EAAD,CACEkB,MAAOb,EAAKa,MAAMC,MAClBC,MAAM,EACNC,GAAI,KACJC,KA1CO,WACXf,EAAU,CACRgB,MAAOpB,YACPqB,UAAW,CAAEC,OAAQpB,EAAKa,MAAMQ,SAASC,WACzCC,YAAa,SAACC,EAAD,GAAyC,IAAtBC,EAAsB,EAAtBA,gBAE9B,GADAnB,GAAQ,IACHkB,EAAeX,MAAMQ,SAASK,YAEjC,OADApB,GAAQ,GACDkB,EAET,IAAMG,EAAWF,EAAgBZ,MAAMC,MACjCO,EAAWI,EAAgBZ,MAAMQ,SAEvC,OAAOM,EAASC,OACZ,CACEf,MAAO,CACLgB,WAAYL,EAAeX,MAAMgB,WACjCf,MAAO,GAAF,SAAMU,EAAeX,MAAMC,OAA3B,EAAqCa,IAC1CN,aAGJG,MAsBJnB,KAAMA","file":"20.main.js","sourcesContent":["import React, { useState, lazy } from \"react\";\r\nimport { GET_POSTS } from \"../../Queries\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nconst Offline = lazy(() => import(\"./Offline\"));\r\nconst Posts = lazy(() => import(\"../post/Posts\"));\r\n\r\nfunction Home() {\r\n  const { loading, data, error, fetchMore, refetch } = useQuery(GET_POSTS);\r\n  const [spin, setSpin] = useState(true);\r\n\r\n  if (loading || !data)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <Offline />\r\n        <button className=\"btn btn-teal\" onClick={refetch}>\r\n          Refresh\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: GET_POSTS,\r\n      variables: { cursor: data.posts.pageInfo.endCursor },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        if (!previousResult.posts.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n        const newEdges = fetchMoreResult.posts.edges;\r\n        const pageInfo = fetchMoreResult.posts.pageInfo;\r\n\r\n        return newEdges.length\r\n          ? {\r\n              posts: {\r\n                __typename: previousResult.posts.__typename,\r\n                edges: [...previousResult.posts.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"nav nav-pills nav-fill home-pages\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\">All Posts</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">\r\n            Following\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n      <Posts\r\n        posts={data.posts.edges}\r\n        self={false}\r\n        id={null}\r\n        more={more}\r\n        spin={spin}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}