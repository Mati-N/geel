{"version":3,"sources":["webpack:///./src/components/pages/FollowingPosts.js"],"names":["Offline","lazy","Posts","FollowingPosts","useQuery","FOLLOWING_POSTS","loading","data","error","fetchMore","refetch","useState","spin","setSpin","className","size","style","margin","onClick","to","posts","followingPosts","edges","self","id","more","query","variables","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","hasNextPage","newEdges","length","__typename"],"mappings":";;;;2qDAKA,IAAMA,EAAUC,gBAAK,kBAAM,gGACrBC,EAAQD,gBAAK,kBAAM,uHA8EVE,UA5Ef,WAA0B,MAC6BC,mBACnDC,mBADMC,EADgB,EAChBA,QAASC,EADO,EACPA,KAAMC,EADC,EACDA,MAAOC,EADN,EACMA,UAAWC,EADjB,EACiBA,QADjB,IAIAC,oBAAS,GAJT,GAIjBC,EAJiB,KAIXC,EAJW,KAMxB,OAAIP,IAAYC,EAEZ,yBAAKO,UAAU,WACb,kBAAC,iBAAD,CACEC,KAAM,GACNC,MAAO,CACLC,OAAQ,UAET,KAILT,EAEA,oCACE,kBAACR,EAAD,MACA,4BAAQc,UAAU,eAAeI,QAASR,GAA1C,UACU,KACA,KAkCd,oCACE,wBAAII,UAAU,cACZ,wBAAIA,UAAU,QACZ,kBAAC,OAAD,CAAMK,GAAG,QAAT,cAEF,wBAAIL,UAAU,eAAd,cAEF,kBAACZ,EAAD,CACEkB,MAAOb,EAAKc,eAAeC,MAC3BC,MAAM,EACNC,GAAI,KACJZ,KAAMA,EACNa,KAzCO,WACXhB,EAAU,CACRiB,MAAOrB,kBACPsB,UAAW,CACTC,OAAQrB,EAAKc,eAAeQ,SAASC,WAEvCC,YAAa,SAACC,EAAD,GAAyC,IAAtBC,EAAsB,EAAtBA,gBAE9B,GADApB,GAAQ,IACHmB,EAAeX,eAAeQ,SAASK,YAE1C,OADArB,GAAQ,GACDmB,EAET,IAAMG,EAAWF,EAAgBZ,eAAeC,MAC1CO,EAAWI,EAAgBZ,eAAeQ,SAEhD,OAAOM,EAASC,OACZ,CACEf,eAAgB,CACdgB,WAAYL,EAAeX,eAAegB,WAC1Cf,MAAO,GAAF,SAAMU,EAAeX,eAAeC,OAApC,EAA8Ca,IACnDN,aAGJG","file":"25.main.js","sourcesContent":["import React, { useState, lazy } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FOLLOWING_POSTS } from \"../../Queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nconst Offline = lazy(() => import(\"./Offline\"));\r\nconst Posts = lazy(() => import(\"../post/Posts\"));\r\n\r\nfunction FollowingPosts() {\r\n  const { loading, data, error, fetchMore, refetch } = useQuery(\r\n    FOLLOWING_POSTS\r\n  );\r\n  const [spin, setSpin] = useState(true);\r\n\r\n  if (loading || !data)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />{\" \"}\r\n      </div>\r\n    );\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <Offline />\r\n        <button className=\"btn btn-teal\" onClick={refetch}>\r\n          Refresh{\" \"}\r\n        </button>{\" \"}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: FOLLOWING_POSTS,\r\n      variables: {\r\n        cursor: data.followingPosts.pageInfo.endCursor,\r\n      },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        if (!previousResult.followingPosts.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n        const newEdges = fetchMoreResult.followingPosts.edges;\r\n        const pageInfo = fetchMoreResult.followingPosts.pageInfo;\r\n\r\n        return newEdges.length\r\n          ? {\r\n              followingPosts: {\r\n                __typename: previousResult.followingPosts.__typename,\r\n                edges: [...previousResult.followingPosts.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"home-pages\">\r\n        <li className=\"link\">\r\n          <Link to=\"/all\">All Posts</Link>\r\n        </li>\r\n        <li className=\"active link\">Following</li>\r\n      </ul>\r\n      <Posts\r\n        posts={data.followingPosts.edges}\r\n        self={false}\r\n        id={null}\r\n        spin={spin}\r\n        more={more}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FollowingPosts;\r\n"],"sourceRoot":""}