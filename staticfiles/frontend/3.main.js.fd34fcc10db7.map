{"version":3,"sources":["webpack:///./src/components/post/PostItem.js"],"names":["Liked","lazy","Heart","Comments","PostItem","text","title","username","id","likeCount","createdAt","user_id","commentCount","show_comment","initialState","done","likes","hasMore","height","loading","comments","expand","liked","useLazyQuery","LIKED","variables","post_id","onCompleted","data","setState","state","useState","hovered","setHovered","comment","setComment","seen","setSeen","self","useRef","likePost","useMutation","LIKE","addComment","CREATE_COMMENT","expandText","useSpring","to","maxHeight","current","scrollHeight","from","duration","useEffect","clientHeight","onEnter","onLeave","className","date","seconds","Math","floor","Date","interval","flr","timeSince","pre","ref","style","onClick","error","console","log","then","post","onMouseOver","onMouseOut","onMouseLeave","onSubmit","e","preventDefault","update","cache","postComments","readQuery","query","GET_POST","newData","edges","__typename","node","createComment","writeQuery","type","name","value","onChange","target"],"mappings":"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","file":"3.main.js","sourcesContent":["import React, { useState, useEffect, useRef, lazy } from \"react\";\r\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { LIKED, LIKE, CREATE_COMMENT, GET_POST } from \"../../Queries\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { Waypoint } from \"react-waypoint\";\r\n\r\nconst Liked = lazy(() => import(\"../SVG/Like.svg\"));\r\nconst Heart = lazy(() => import(\"../SVG/Heart.svg\"));\r\nconst Comments = lazy(() => import(\"../SVG/Comments.svg\"));\r\n\r\nconst PostItem = ({\r\n  text,\r\n  title,\r\n  username,\r\n  id,\r\n  likeCount,\r\n  createdAt,\r\n  user_id,\r\n  commentCount,\r\n  show_comment,\r\n}) => {\r\n  const initialState = {\r\n    done: false,\r\n    likes: likeCount,\r\n    hasMore: false,\r\n    height: \"32vh\",\r\n    loading: true,\r\n    comments: commentCount,\r\n    expand: false,\r\n  };\r\n  const [liked] = useLazyQuery(LIKED, {\r\n    variables: { post_id: id },\r\n    onCompleted: (data) => {\r\n      setState({ ...state, liked: data.liked });\r\n    },\r\n  });\r\n\r\n  const [hovered, setHovered] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [seen, setSeen] = useState(\"\");\r\n  const self = useRef(null);\r\n\r\n  const [likePost] = useMutation(LIKE);\r\n  const [addComment] = useMutation(CREATE_COMMENT);\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const expandText = useSpring({\r\n    to: {\r\n      maxHeight: state.expand ? `${self.current.scrollHeight}px` : \"230px\",\r\n      height: state.expand ? `${self.current.scrollHeight}px` : \"230px\",\r\n    },\r\n    from: {\r\n      maxHeight: !state.expand ? \"230px\" : `${self.current.scrollHeight}px`,\r\n      height: !state.expand ? \"230px\" : `${self.current.scrollHeight}px`,\r\n    },\r\n    duration: \"0.9s\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    liked();\r\n    setState({\r\n      ...state,\r\n      hasMore: self.current.scrollHeight > self.current.clientHeight,\r\n      loading: false,\r\n    });\r\n  }, []);\r\n\r\n  const timeSince = (date) => {\r\n    let seconds = Math.floor((new Date() - date) / 1000);\r\n\r\n    let interval = seconds / 31536000;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return Math.floor(interval) + (flr === 1 ? \" year\" : \" years\");\r\n    }\r\n\r\n    interval = seconds / 2592000;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return flr + (flr === 1 ? \" month\" : \" months\");\r\n    }\r\n\r\n    interval = seconds / 86400;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return Math.floor(flr) + (flr === 1 ? \" day\" : \" days\");\r\n    }\r\n\r\n    interval = seconds / 3600;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return flr + (flr === 1 ? \" hour\" : \" hours\");\r\n    }\r\n\r\n    interval = seconds / 60;\r\n    if (interval > 1) {\r\n      const flr = Math.floor(interval);\r\n      return flr + (flr == 1 ? \" minute\" : \" minutes\");\r\n    }\r\n    return \"Seconds\";\r\n  };\r\n\r\n  const like = () => {\r\n    likePost({ variables: { post_id: id } })\r\n      .catch((error) => console.log(error))\r\n      .then(({ data: { likePost } }) => {\r\n        setState({\r\n          ...state,\r\n          liked: !state.liked,\r\n          likes: likePost.post.likeCount,\r\n        });\r\n      });\r\n  };\r\n  const add_comment = (e) => {\r\n    e.preventDefault();\r\n    addComment({\r\n      variables: { id, comment },\r\n      update: (cache, { data }) => {\r\n        if (cache) {\r\n          let { postComments } = cache.readQuery({\r\n            query: GET_POST,\r\n            variables: { id },\r\n          });\r\n          console.log(postComments);\r\n          if (postComments) {\r\n            const newData = {\r\n              ...postComments,\r\n              edges: [\r\n                {\r\n                  __typename: \"CommentNodeConnection\",\r\n                  node: data.createComment.comment,\r\n                },\r\n                ...postComments.edges,\r\n              ],\r\n            };\r\n            cache.writeQuery({\r\n              query: GET_POST,\r\n              variables: { id },\r\n              data: {\r\n                postComments: newData,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Waypoint onEnter={() => setSeen(\"seen-post\")} onLeave={() => setSeen(\"\")}>\r\n      <div className={`post card ${seen}`}>\r\n        <div className=\"post-top card-top\">\r\n          <div className=\"post-info-top\">\r\n            <Link to={`user/${user_id}`} className=\"post-user\">\r\n              {\" \"}\r\n              {username}{\" \"}\r\n            </Link>\r\n            <small className=\"post-time\">\r\n              {timeSince(new Date(createdAt))} ago{\" \"}\r\n            </small>\r\n          </div>\r\n          <h5 className=\"post-title\">{title}</h5>\r\n        </div>\r\n        <animated.pre\r\n          ref={self}\r\n          className={`post-text`}\r\n          style={state.hasMore ? expandText : {}}\r\n        >\r\n          {text}\r\n          {state.hasMore && (\r\n            <button\r\n              className=\"more\"\r\n              onClick={() => {\r\n                setState({ ...state, expand: !state.expand });\r\n              }}\r\n            >\r\n              {state.expand ? \"less\" : \"more\"}\r\n            </button>\r\n          )}\r\n        </animated.pre>\r\n        {!state.loading && (\r\n          <>\r\n            <div className=\"info-bottom\">\r\n              <span\r\n                className=\"like\"\r\n                onClick={() => {\r\n                  like();\r\n                }}\r\n                onMouseOver={() => setHovered(true)}\r\n                onMouseOut={() => setHovered(false)}\r\n                onMouseLeave={() => setHovered(false)}\r\n              >\r\n                {!hovered ? (\r\n                  state.liked ? (\r\n                    <Liked className=\"like-icon\" />\r\n                  ) : (\r\n                    <Heart className=\"like-icon\" />\r\n                  )\r\n                ) : !state.liked ? (\r\n                  <Liked className=\"like-icon\" />\r\n                ) : (\r\n                  <Heart className=\"like-icon\" />\r\n                )}\r\n                {state.likes > 0 && state.likes}\r\n              </span>\r\n              <span className=\"like\">\r\n                <Link to={`/post/${id}`} className=\"like-icon\">\r\n                  <Comments />\r\n                </Link>\r\n                {state.comments > 0 && state.comments}\r\n              </span>\r\n            </div>\r\n\r\n            {show_comment && (\r\n              <span className=\"comment-form\">\r\n                <form\r\n                  onSubmit={add_comment}\r\n                  className=\"form-group comment-form\"\r\n                >\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"comment\"\r\n                    name=\"text\"\r\n                    value={comment}\r\n                    onChange={(e) => setComment(e.target.value)}\r\n                  />\r\n                  <button className=\"btn btn-teal\" type=\"submit\" id=\"btn\">\r\n                    Comment\r\n                  </button>\r\n                </form>\r\n              </span>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </Waypoint>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n"],"sourceRoot":""}