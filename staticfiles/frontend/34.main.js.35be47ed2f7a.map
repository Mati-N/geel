{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/index.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack:///./node_modules/@material-ui/core/esm/utils/createSvgIcon.js","webpack:///./src/components/pages/User.js"],"names":["styles","theme","root","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","colorDefault","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","img","textAlign","objectFit","textIndent","fallback","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","system","propTypes","string","node","object","elementType","oneOf","name","d","createSvgIcon","path","displayName","createElement","concat","muiName","memo","forwardRef","Offline","lazy","Posts","User","match","useQuery","GET_USER","variables","id","params","user_loading","loading","user_data","data","user_error","error","USER_POSTS","fetchMore","refetch","user","useRecoilValue","authAtom","removeAlert","useResetRecoilState","alertAtom","useState","spin","setSpin","follow","useMutation","FOLLOW","useEffect","to","size","style","margin","userGet","userPost","imagePath","username","substring","onClick","update","cache","writeFragment","fragment","gql","followerCount","followUser","isFollowing","xmlns","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","postCount","posts","edges","self","more","query","cursor","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","newEdges","hasNextPage","length","__typename"],"mappings":"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","file":"34.main.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","export { default } from './Avatar';","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import React, { useState, useEffect, lazy } from \"react\";\r\nimport { GET_USER, USER_POSTS, FOLLOW } from \"../../Queries\";\r\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\r\nimport { ImpulseSpinner as Spinner } from \"react-spinners-kit\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authAtom, alertAtom } from \"../../atoms\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useRecoilValue, useResetRecoilState } from \"recoil\";\r\n\r\nconst Offline = lazy(() => import(\"./Offline\"));\r\nconst Posts = lazy(() => import(\"../post/Posts\"));\r\n\r\nconst User = ({ match }) => {\r\n  const {\r\n    loading: user_loading,\r\n    data: user_data,\r\n    error: user_error,\r\n  } = useQuery(GET_USER, { variables: { id: match.params.id } });\r\n  const { loading, data, error, fetchMore, refetch } = useQuery(USER_POSTS, {\r\n    variables: { id: match.params.id },\r\n  });\r\n  const { user } = useRecoilValue(authAtom);\r\n  const removeAlert = useResetRecoilState(alertAtom);\r\n  const [spin, setSpin] = useState(false)\r\n  const [follow] = useMutation(FOLLOW);\r\n\r\n  useEffect(() => {\r\n    removeAlert();\r\n  }, []);\r\n\r\n  if (user == match.params.id) {\r\n    return <Redirect to=\"/account\" />;\r\n  }\r\n\r\n  if (loading || !data || user_loading || !user_data)\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner\r\n          size={50}\r\n          style={{\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n  if (error || user_error) {\r\n    return <Offline />;\r\n  }\r\n\r\n  const more = () => {\r\n    fetchMore({\r\n      query: USER_POSTS,\r\n      variables: {\r\n        cursor: data.userPost.pageInfo.endCursor,\r\n        id: match.params.id,\r\n      },\r\n      updateQuery: (previousResult, { fetchMoreResult }) => {\r\n        setSpin(true);\r\n        const newEdges = fetchMoreResult.userPost.edges;\r\n        const pageInfo = fetchMoreResult.userPost.pageInfo;\r\n\r\n        if (!previousResult.userPost.pageInfo.hasNextPage) {\r\n          setSpin(false);\r\n          return previousResult;\r\n        }\r\n\r\n        return newEdges.length\r\n          ? {\r\n              userPost: {\r\n                __typename: previousResult.userPost.__typename,\r\n                edges: [...previousResult.userPost.edges, ...newEdges],\r\n                pageInfo,\r\n              },\r\n            }\r\n          : previousResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  if (user_data.userGet == null) {\r\n    return <h1>User Does Not Exist</h1>;\r\n  }\r\n\r\n  const followIt = () => {\r\n    follow({\r\n      variables: { id: match.params.id },\r\n      update: (cache, { data }) => {\r\n        if (cache) {\r\n          cache.writeFragment({\r\n            id: `UserNode:${match.params.id}`,\r\n            fragment: gql`\r\n              fragment User on UserNode {\r\n                isFollowing\r\n                followerCount\r\n              }\r\n            `,\r\n            data: {\r\n              followerCount: data.followUser.user.followerCount,\r\n              isFollowing: data.followUser.user.isFollowing,\r\n            },\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const { userPost } = data;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"account-info\">\r\n        <div className=\"account-info-top\">\r\n          <Avatar\r\n            alt=\"profile picture\"\r\n            src={user_data.userGet.imagePath}\r\n            variant=\"circle\"\r\n            style={{\r\n              margin: \"0.4em\",\r\n            }}\r\n          >\r\n            {user_data.userGet.username.substring(0, 1)}\r\n          </Avatar>\r\n          <span className=\"username inline-block\">\r\n            {user_data.userGet.username}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"info-mini\">\r\n          <button className=\"btn btn-teal\" onClick={followIt}>\r\n            {user_data.userGet.isFollowing ? (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"icon icon-tabler icon-tabler-user-plus\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"rgb(248, 248, 248)\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                <circle cx=\"9\" cy=\"7\" r=\"4\" />\r\n                <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n                <path d=\"M16 11h6m-3 -3v6\" />\r\n              </svg>\r\n            ) : (\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"icon icon-tabler icon-tabler-user-minus\"\r\n                width=\"25\"\r\n                height=\"25\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"rgb(248, 248, 248)\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              >\r\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                <circle cx=\"9\" cy=\"7\" r=\"4\" />\r\n                <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n                <line x1=\"16\" y1=\"11\" x2=\"22\" y2=\"11\" />\r\n              </svg>\r\n            )}{\" \"}\r\n            {user_data.userGet.isFollowing ? \"Unfollow\" : \"Follow\"}\r\n          </button>\r\n          <span className=\"info\">\r\n            {user_data.userGet.postCount > 0\r\n              ? user_data.userGet.postCount\r\n              : \"No\"}{\" \"}\r\n            Post{user_data.userGet.postCount > 1 ? \"s\" : \"\"}\r\n          </span>\r\n          <span className=\"info\">\r\n            {user_data.userGet.followerCount > 0 ? user_data.userGet.followerCount : \"No\"} Follower\r\n            {user_data.userGet.followerCount > 1 ? \"s\" : \"\"}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <Posts\r\n        posts={userPost.edges}\r\n        self={true}\r\n        username={user_data.userGet.username}\r\n        id={match.params.id}\r\n        more={more}\r\n        spin={spin}\r\n        refetch={refetch}\r\n        imagePath={user_data.userGet.imagePath}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"sourceRoot":""}